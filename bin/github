#!/usr/bin/env node
// Dependencies
var Box = require("cli-box")
  , GitHub = new (require("github"))({
        version: "3.0.0"
    })
  , Login = require("../lib/api/login")
  , Keypress = require("keypress")
  , CliUpdate = require("cli-update")
  , Prompt = require("promptify")
  , Path = require("path")
  , Config = require("../lib/conf")
  ;

// Help output
if (~process.argv.indexOf("-h") || ~process.argv.indexOf("--help")) {
    return console.log("Usage: github");
}

// Conigure prompt
Config.prompt = Prompt;
Config.coloredImages = !!~process.argv.indexOf("--colored-images");
Keypress(process.stdin);

// Frame handlers
Config.frameHandlers = require("../lib/frame-handlers");

// Attach GitHub object to Config
Config._github = GitHub;

// Configure CLI Update
Config.cli.update = CliUpdate;
CliUpdate.navigation = function (data) {
    data && data.currentFrame && (Config.currentFrame = data.currentFrame);
};

CliUpdate.changed = function (output) {
    Config.cache._currentScreen = output;
};


// Set background box
Config.background = Box({
    fullscreen: true
  , marks: {
        nw: "╔"
      , n:  "═"
      , ne: "╗"
      , e:  "║"
      , se: "╝"
      , s:  "═"
      , sw: "╚"
      , w:  "║"
      , b: " "
    }
});

try {
var conf = require(Config.CONFIG_PATH);
} catch (e) {
    conf = {};
}
for (var key in conf) {
    Config[key] = conf[key];
}

// Initialize UI
var SplashScreen = require("../lib/ui/splash-screen")
  , MainStream = require("../lib/ui/stream")
  ;

// Show splashscreen
SplashScreen.show(function (err, output) {
    if (err) { throw err; }
    SplashScreen.updateMessage("Logging in ...");

    // Login user
    Login(function (err, user) {
        if (err) {
            try {
                var error = JSON.parse(err.message).message;
            } catch (e) {
                error = err.toString();
            }
            SplashScreen.updateMessage("Failed to login in: " + error);
            return setTimeout(function () {
                process.exit();
            }, 1000);
        }
        Config.user = user;
        SplashScreen.updateMessage("Logged in as: " + user.login + ". Fetching News Feed ...");
        MainStream(function (err) {
          if (err) {
            throw err;
          }
        });
    });
});

// Listen for the "keypress" event
process.stdin.on("keypress", function (ch, key) {
    if (Config.promptRunning) {
        return;
    }
    if (key && key.name === "c" && key.ctrl) {
        process.exit();
    }
    var handlers = Config.frameHandlers[Config.currentFrame] || {};
    if (key && key.shift && typeof handlers[key.name.toUpperCase()] === "function") {
        handlers[key.name.toUpperCase()]();
    }

    if (key && key.shift && key.name === "left") {
        Config.cli.update.back();
    }

    if (key && key.shift && key.name === "right") {
        Config.cli.update.next();
    }
});

try {
process.stdin.setRawMode(true);
process.stdin.resume();
} catch (e) {}
